PRACTICE_TASKS = {
    # Модуль 1: Введение в сетевой анализ
    1: [
        {
            "title": "Установка и настройка Wireshark",
            "description": (
                "1. Скачайте последнюю версию Wireshark с официального сайта\n"
                "2. Установите программу с настройками по умолчанию\n"
                "3. Запустите Wireshark и настройте интерфейс:\n"
                "   - Включите отображение номеров пакетов\n"
                "   - Активируйте подсветку протоколов\n"
                "4. Сделайте скриншот главного окна с видимыми сетевыми интерфейсами"
            ),
            "check": (
                "1. Скриншот должен показывать главное окно Wireshark\n"
                "2. Должны быть видны доступные сетевые интерфейсы\n"
                "3. В заголовке окна должна быть видна версия программы"
            ),
            "resources": ["https://www.wireshark.org/download.html"]
        },
        {
            "title": "Базовый захват трафика",
            "description": (
                "1. Запустите захват трафика на основном сетевом интерфейсе\n"
                "2. Откройте любой сайт в браузере (например, google.com)\n"
                "3. Подождите 10 секунд, затем остановите захват\n"
                "4. Сохраните файл захвата в формате .pcap\n"
                "5. Найдите в захвате HTTP-запрос к посещенному сайту"
            ),
            "check": (
                "1. Файл захвата должен содержать не менее 100 пакетов\n"
                "2. Должен быть виден DNS-запрос к посещенному сайту\n"
                "3. Должен присутствовать HTTP GET-запрос"
            )
        },
        {
            "title": "Анализ ping-запросов",
            "description": (
                "1. Запустите захват трафика\n"
                "2. Откройте командную строку и выполните: ping 8.8.8.8\n"
                "3. Сделайте 5 ping-запросов\n"
                "4. Остановите захват и найдите ICMP-пакеты\n"
                "5. Определите среднее время ответа"
            ),
            "check": (
                "1. В захвате должно быть не менее 10 ICMP-пакетов\n"
                "2. Должны быть видны запросы (Echo request) и ответы (Echo reply)\n"
                "3. В отчете должно быть указано среднее время ответа"
            )
        }
    ],
    
    # Модуль 2: Сетевые протоколы
    2: [
        {
            "title": "Анализ DNS-запросов",
            "description": (
                "1. Очистите DNS-кэш (ipconfig /flushdns)\n"
                "2. Запустите захват трафика\n"
                "3. Откройте в браузере новый сайт (который вы раньше не посещали)\n"
                "4. Найдите в захвате DNS-запрос и ответ\n"
                "5. Определите:\n"
                "   - DNS-сервер, которому был отправлен запрос\n"
                "   - Время разрешения доменного имени\n"
                "   - IP-адрес полученный в ответе"
            ),
            "check": (
                "1. В отчете должен быть указан DNS-сервер (обычно это ваш роутер или 8.8.8.8)\n"
                "2. Должно быть измерено время между запросом и ответом\n"
                "3. Должен быть указан правильный IP-адрес для домена"
            )
        },
        {
            "title": "Исследование TCP-соединения",
            "description": (
                "1. Запустите захват трафика\n"
                "2. Откройте сайт http://example.com\n"
                "3. Остановите захват после полной загрузки страницы\n"
                "4. Найдите и проанализируйте:\n"
                "   - Процесс TCP handshake (SYN, SYN-ACK, ACK)\n"
                "   - Процесс завершения соединения (FIN)\n"
                "5. Определите общее время соединения"
            ),
            "check": (
                "1. В отчете должны быть отмечены все этапы установки соединения\n"
                "2. Должны быть показаны пакеты завершения соединения\n"
                "3. Должно быть указано общее время от установки до разрыва соединения"
            )
        },
        {
            "title": "Сравнение HTTP и HTTPS",
            "description": (
                "1. Захватите трафик при посещении http://example.com\n"
                "2. Захватите трафик при посещении https://example.com\n"
                "3. Сравните:\n"
                "   - Видимость данных в HTTP\n"
                "   - Зашифрованность данных в HTTPS\n"
                "   - Порты, используемые для соединения\n"
                "4. Составьте сравнительную таблицу"
            ),
            "check": (
                "1. Должны быть предоставлены два файла захвата\n"
                "2. В отчете должна быть таблица сравнения\n"
                "3. Должны быть правильно указаны порты (80 для HTTP, 443 для HTTPS)"
            )
        }
    ],
    
    # Модуль 3: Безопасность
    3: [
        {
            "title": "Обнаружение ARP-спуфинга",
            "description": (
                "1. Запустите захват ARP-трафика в локальной сети\n"
                "2. Проанализируйте ARP-пакеты на предмет:\n"
                "   - Нескольких ответов для одного IP-адреса\n"
                "   - Несоответствия MAC-адресов\n"
                "3. Если ARP-спуфинг обнаружен, определите атакующее устройство\n"
                "4. Составьте отчет с доказательствами"
            ),
            "check": (
                "1. Отчет должен содержать скриншоты подозрительных ARP-пакетов\n"
                "2. Должна быть указана статистика по ARP-ответам\n"
                "3. При обнаружении атаки должен быть идентифицирован MAC-адрес злоумышленника"
            ),
            "resources": ["https://wiki.wireshark.org/AddressResolutionProtocol"]
        },
        {
            "title": "Анализ DDoS-атаки",
            "description": (
                "1. Скачайте образец трафика с DDoS-атакой (прилагается)\n"
                "2. Откройте файл в Wireshark\n"
                "3. Определите:\n"
                "   - Тип атаки (SYN flood, UDP flood и т.д.)\n"
                "   - Источник атаки (если возможно)\n"
                "   - Количество пакетов в секунду\n"
                "4. Предложите методы защиты"
            ),
            "check": (
                "1. Должен быть правильно определен тип атаки\n"
                "2. Должна быть рассчитана интенсивность атаки (пакеты/сек)\n"
                "3. Должны быть предложены минимум 3 метода защиты"
            )
        },
        {
            "title": "Выявление утечки DNS",
            "description": (
                "1. Подключитесь к VPN\n"
                "2. Запустите захват трафика\n"
                "3. Посетите несколько сайтов\n"
                "4. Проанализируйте, какие DNS-запросы идут через VPN, а какие мимо\n"
                "5. Определите возможные утечки"
            ),
            "check": (
                "1. В отчете должны быть перечислены все DNS-запросы\n"
                "2. Должны быть отмечены запросы, идущие в обход VPN\n"
                "3. Должны быть предложены способы устранения утечек"
            )
        }
    ],
    
    # Модуль 4: Диагностика сети
    4: [
        {
            "title": "Диагностика медленного соединения",
            "description": (
                "1. Захватите трафик при медленной загрузке сайта\n"
                "2. Проанализируйте:\n"
                "   - Время ответа сервера\n"
                "   - Количество повторных передач\n"
                "   - Задержки между пакетами\n"
                "3. Определите основную причину медленной работы\n"
                "4. Предложите решение проблемы"
            ),
            "check": (
                "1. Должны быть измерены временные характеристики соединения\n"
                "2. Должны быть идентифицированы пакеты с повторной передачей\n"
                "3. Должна быть предложена обоснованная причина проблемы"
            )
        },
        {
            "title": "Анализ VoIP-трафика",
            "description": (
                "1. Захватите трафик во время VoIP-звонка (Skype/WhatsApp)\n"
                "2. Проанализируйте:\n"
                "   - Используемый кодек\n"
                "   - Задержку передачи пакетов\n"
                "   - Потерю пакетов\n"
                "3. Оцените качество связи"
            ),
            "check": (
                "1. Должен быть определен кодек (G.711, G.729 и т.д.)\n"
                "2. Должна быть рассчитана средняя задержка\n"
                "3. Должен быть сделан вывод о качестве связи"
            ),
            "resources": ["https://wiki.wireshark.org/VoIP_calls"]
        },
        {
            "title": "Оптимизация фильтров Wireshark",
            "description": (
                "1. Захватите трафик при обычном серфинге в интернете\n"
                "2. Создайте и протестируйте фильтры для:\n"
                "   - Выделения только HTTP-трафика\n"
                "   - Поиска пакетов с ошибками\n"
                "   - Фильтрации по IP-адресу\n"
                "3. Замерьте производительность с фильтрами и без"
            ),
            "check": (
                "1. Должны быть предоставлены 3 рабочих фильтра\n"
                "2. Должны быть приведены замеры производительности\n"
                "3. Должны быть сделаны выводы об эффективности фильтров"
            )
        }
    ],
    
    # Модуль 5: Продвинутые техники
    5: [
        {
            "title": "Автоматизация анализа с Tshark",
            "description": (
                "1. Установите Tshark (консольную версию Wireshark)\n"
                "2. Напишите скрипт (bash/batch), который:\n"
                "   - Захватывает трафик в течение 30 секунд\n"
                "   - Сохраняет статистику по протоколам\n"
                "   - Находит топ-5 IP-адресов по трафику\n"
                "3. Запустите скрипт и сохраните результаты"
            ),
            "check": (
                "1. Должен быть предоставлен рабочий скрипт\n"
                "2. В отчете должна быть статистика по протоколам\n"
                "3. Должен быть список топ-5 IP с количеством трафика"
            ),
            "resources": ["https://www.wireshark.org/docs/man-pages/tshark.html"]
        },
        {
            "title": "Анализ SSL/TLS handshake",
            "description": (
                "1. Захватите трафик при подключении к HTTPS-сайту\n"
                "2. Проанализируйте процесс установки SSL/TLS соединения:\n"
                "   - Client Hello\n"
                "   - Server Hello\n"
                "   - Обмен сертификатами\n"
                "   - Установка ключей шифрования\n"
                "3. Определите используемые алгоритмы шифрования"
            ),
            "check": (
                "1. Должны быть отмечены все этапы handshake\n"
                "2. Должен быть определен алгоритм шифрования\n"
                "3. Должен быть проверен сертификат сервера"
            )
        },
        {
            "title": "Создание собственного диссектора",
            "description": (
                "1. Напишите простой диссектор для Wireshark на Lua:\n"
                "   - Должен распознавать кастомный протокол\n"
                "   - Должен отображать поля пакета\n"
                "   - Должен подсвечивать ошибки\n"
                "2. Протестируйте на примере трафика\n"
                "3. Приложите код диссектора и пример работы"
            ),
            "check": (
                "1. Должен быть предоставлен рабочий код на Lua\n"
                "2. Должны быть скриншоты работы диссектора\n"
                "3. Должны быть обработаны ошибки формата пакетов"
            ),
            "resources": ["https://wiki.wireshark.org/Lua"]
        }
    ]
}